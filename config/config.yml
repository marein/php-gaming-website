parameters:
    # Workaround for doctrine/doctrine-migrations-bundle:^3.0
    # To be able to use multiple connections, the bundle requires a default connection.
    # See https://github.com/marein/php-gaming-website/issues/62.
    doctrine.migrations.preferred_connection: identity

imports:
    - { resource: chat/config.yml }
    - { resource: connect-four/config.yml }
    - { resource: identity/config.yml }
    - { resource: web-interface/config.yml }

framework:
    secret: '%env(APP_KERNEL_SECRET)%'
    validation:
        enabled: true
    router:
        resource: "%kernel.project_dir%/config/routing.yml"

monolog:
    handlers:
        application_stream:
            type: stream
            path: 'php://stderr'
            level: warning
            process_psr_3_messages: false
            formatter: 'monolog.formatter.json'

twig:
    strict_variables: '%kernel.debug%'

services:

    gaming.schedule-doctrine-connection-heartbeat-middleware:
        class: Gaming\Common\DoctrineHeartbeatMiddleware\SchedulePeriodicHeartbeatMiddleware
        arguments:
            - '@gaming.scheduler'
            - 60
            - '@clock'
        tags:
            - { name: doctrine.middleware }

    gaming.message-broker.connection-factory:
        class: Gaming\Common\MessageBroker\Integration\AmqpLib\ConnectionFactory\AmqpStreamConnectionFactory
        arguments:
            - '%env(APP_RABBIT_MQ_DSN)%'

    gaming.message-broker.declare-topology-connection-factory:
        class: Gaming\Common\MessageBroker\Integration\AmqpLib\ConnectionFactory\DeclareTopologyConnectionFactory
        decorates: gaming.message-broker.connection-factory
        arguments:
            - '@.inner'
            - '@gaming.message-broker.topology'

    gaming.message-broker.schedule-periodic-heartbeat-connection-factory:
        class: Gaming\Common\MessageBroker\Integration\AmqpLib\ConnectionFactory\SchedulePeriodicHeartbeatConnectionFactory
        decorates: gaming.message-broker.connection-factory
        arguments:
            - '@.inner'
            - '@gaming.scheduler'

    gaming.message-broker.gaming-exchange-topology:
        class: Gaming\Common\MessageBroker\Integration\AmqpLib\Topology\ExchangeTopology
        arguments:
            - 'gaming'
            - !php/const PhpAmqpLib\Exchange\AMQPExchangeType::TOPIC
        tags:
            - { name: 'gaming.message-broker.topology', priority: 100 }

    gaming.message-broker.topology:
        class: Gaming\Common\MessageBroker\Integration\AmqpLib\Topology\CompositeTopology
        arguments:
            - !tagged { tag: 'gaming.message-broker.topology' }

    gaming.message-broker.message-translator:
        class: Gaming\Common\MessageBroker\Integration\AmqpLib\MessageTranslator\ConfigurableMessageTranslator
        arguments:
            - { delivery_mode: !php/const PhpAmqpLib\Message\AMQPMessage::DELIVERY_MODE_PERSISTENT }
            - 'hash-on'

    gaming.message-broker.message-router:
        class: Gaming\Common\MessageBroker\Integration\AmqpLib\MessageRouter\RouteMessagesToExchange
        arguments:
            - 'gaming'

    gaming.message-broker.gaming-exchange-publisher:
        class: Gaming\Common\MessageBroker\Integration\AmqpLib\AmqpPublisher
        arguments:
            - '@gaming.message-broker.connection-factory'
            - '@gaming.message-broker.message-translator'
            - '@gaming.message-broker.message-router'
            - '@event_dispatcher'

    gaming.message-broker.amqp-consumer-factory:
        class: Gaming\Common\MessageBroker\Integration\AmqpLib\AmqpConsumerFactory
        arguments:
            - '@gaming.message-broker.connection-factory'
            - '%env(key:prefetchCount:query_string:APP_RABBIT_MQ_DSN)%'
            - '@gaming.message-broker.message-translator'
            - '@gaming.message-broker.message-router'
            - '@event_dispatcher'

    gaming.consume-messages-command:
        class: Gaming\Common\MessageBroker\Integration\Symfony\ConsumeMessagesCommand
        arguments:
            - !tagged_locator { tag: 'gaming.consumer', index_by: 'key' }
        tags:
            - { name: console.command, command: gaming:consume-messages, description: 'Consume messages.' }

    Gaming\Common\MessageBroker\Integration\Symfony\ResetServicesListener:
        arguments:
            - '@services_resetter'
            - 50
        tags:
            - { name: kernel.event_listener, method: 'messageHandled', priority: -50 }

    Gaming\Common\MessageBroker\EventListener\ThrowWhenMessageReturned:
        arguments:
            - '@logger'
        tags:
            - { name: kernel.event_listener, method: 'messageReturned', priority: 50 }

    Gaming\Common\MessageBroker\EventListener\ThrowWhenMessageFailed:
        arguments:
            - '@logger'
        tags:
            - { name: kernel.event_listener, method: 'messageFailed' }

    gaming.scheduler:
        class: Gaming\Common\Scheduler\PcntlScheduler

    # Custom exception listener for the gaming domain.
    # Lower priority so that the profiler is respected.
    # todo: This can be removed as soon as https://github.com/marein/php-gaming-website/issues/34 is done.
    gaming.exception-to-json-listener:
        class: Gaming\Common\ExceptionHandling\GamingExceptionListener
        tags:
            - { name: kernel.event_listener, event: kernel.exception, priority: -100 }

    # Lower priority so that the profiler is respected.
    gaming.application-exception-to-json-listener:
        class: Gaming\Common\Bus\Integration\ApplicationExceptionToJsonListener
        arguments:
            - []
        tags:
            - { name: kernel.event_listener, event: kernel.exception, priority: -99 }
