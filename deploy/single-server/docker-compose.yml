version: '3.4'

# This file must be self-contained because it is used by Play with Docker.

x-php-container:
    &php-container
    image: marein/php-gaming-website:php-fpm
    environment:
        APP_ENVIRONMENT: "prod"
        APP_KERNEL_SECRET: "ThisTokenIsNotSoSecretChangeIt"
        APP_WAIT_FOR: "unix:///var/run/proxysql/proxysql.sock,mysql:3306,redis:6379,rabbitmq:5672,nchan:81"
        APP_RABBIT_MQ_DSN: "amqp://guest:guest@rabbitmq:5672?heartbeat=60&prefetchCount=30"
        APP_CHAT_DOCTRINE_DBAL_URL: "mysqli://root:password@localhost/chat?persistent=1&unix_socket=/var/run/proxysql/proxysql.sock"
        APP_CHAT_RUN_MIGRATIONS: "1"
        APP_CHAT_PREDIS_CLIENT_URL: "redis://redis:6379?persistent=1"
        APP_CONNECT_FOUR_DOCTRINE_DBAL_URL: "mysqli://root:password@localhost?persistent=1&unix_socket=/var/run/proxysql/proxysql.sock"
        APP_CONNECT_FOUR_DOCTRINE_DBAL_DATABASE: "connect-four"
        APP_CONNECT_FOUR_DOCTRINE_DBAL_SHARDS: "connect-four"
        APP_CONNECT_FOUR_RUN_MIGRATIONS: "1"
        APP_CONNECT_FOUR_PREDIS_CLIENT_URL: "redis://redis:6379?persistent=1"
        APP_IDENTITY_DOCTRINE_DBAL_URL: "mysqli://root:password@localhost/identity?persistent=1&unix_socket=/var/run/proxysql/proxysql.sock"
        APP_IDENTITY_RUN_MIGRATIONS: "1"
        APP_WEB_INTERFACE_PREDIS_CLIENT_URL: "redis://redis:6379?persistent=1"
        APP_WEB_INTERFACE_NCHAN_BASE_URL: "http://nchan:81"
        APP_WEB_INTERFACE_PUBLISH_TO_BROWSER_SHARDS: "1"
    depends_on:
        - mysql
        - proxysql
        - redis
        - rabbitmq
        - nchan
    volumes:
        - proxysql.sock:/var/run/proxysql
    restart: on-failure

services:
    traefik:
        image: marein/php-gaming-website:traefik
        command:
            - --metrics.prometheus=true
            - --providers.docker
            - --providers.docker.exposedbydefault=false
        ports:
            - "80:80"
        depends_on:
            - nchan
            - web-interface-http
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        labels:
            - "prometheus-job=traefik"
            - "prometheus-port=8080"
    grafana:
        image: ghcr.io/gaming-platform/docker-grafana:10.0
        restart: on-failure
        ports:
            - "8083:3000"
    prometheus:
        image: marein/php-gaming-website:prometheus
        restart: on-failure
        user: root # Needed for accessing docker.sock. In prod, it may be handled via file permissions.
        command:
            - '--config.file=/etc/prometheus/prometheus-docker.yml'
            - '--storage.tsdb.path=/prometheus'
        volumes:
            - prometheus:/prometheus
            - /var/run/docker.sock:/var/run/docker.sock
    node-exporter:
        image: prom/node-exporter:v1.6.0
        labels:
            - "prometheus-job=node"
            - "prometheus-port=9100"
    mysql:
        image: ghcr.io/gaming-platform/docker-mysql:8.2
        volumes:
            - mysql:/var/lib/mysql
        restart: on-failure
    mysql-exporter:
        image: prom/mysqld-exporter:v0.15.0
        command: --mysqld.username=root --mysqld.address mysql:3306
        environment:
            MYSQLD_EXPORTER_PASSWORD: password
        labels:
            - "prometheus-job=mysql"
            - "prometheus-port=9104"
    proxysql:
        image: ghcr.io/gaming-platform/docker-proxysql:2.5
        environment:
            PROXYSQL_CONFIG: |
                admin_variables: {
                    restapi_enabled="true"
                    hash_passwords="false"
                }
                mysql_variables: {
                    interfaces="/var/run/proxysql/proxysql.sock"
                    server_version="8.2"
                    monitor_username="root"
                    monitor_password="password"
                    auto_increment_delay_multiplex=0
                }
                mysql_servers: (
                    {hostgroup=1,address="mysql",port=3306,max_connections=100}
                )
                mysql_users: (
                    {username="root",password="password",default_hostgroup=1}
                )
        depends_on:
            - mysql
        volumes:
            - proxysql.sock:/var/run/proxysql
        labels:
            - "prometheus-job=proxysql"
            - "prometheus-port=6070"
            - "prometheus-path=/metrics"
        restart: on-failure
    redis:
        image: marein/php-gaming-website:redis
        command: redis-server --appendonly yes
        volumes:
            - redis:/data
        restart: on-failure
    redis-exporter:
        image: oliver006/redis_exporter:v1.51.0
        command:
            - '-redis.addr=redis:6379'
        labels:
            - "prometheus-job=redis"
            - "prometheus-port=9121"
    rabbitmq:
        image: ghcr.io/gaming-platform/docker-rabbitmq:3.12
        hostname: rabbitmq
        volumes:
            - rabbitmq:/var/lib/rabbitmq/mnesia
        labels:
            - "prometheus-job=rabbitmq"
            - "prometheus-port=15692"
            - "prometheus-path=/metrics/per-object"
        restart: on-failure
    nchan:
        image: marein/php-gaming-website:nchan
        restart: on-failure
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.nchan.priority=20"
            - "traefik.http.routers.nchan.rule=PathPrefix(`/sse`)"
            - "prometheus-job=nchan"
            - "prometheus-port=81"
    web-interface-http:
        <<: *php-container
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.web-interface-http.priority=10"
            - "traefik.http.routers.web-interface-http.rule=PathPrefix(`/`)"
            - "traefik.http.services.web-interface-http.loadbalancer.server.port=80"
    connect-four-follow-event-store:
        <<: *php-container
        command: bin/console connect-four:follow-event-store pointer all
    chat-follow-event-store:
        <<: *php-container
        command: bin/console chat:follow-event-store pointer all
    identity-follow-event-store:
        <<: *php-container
        command: bin/console identity:follow-event-store pointer all
    consume-messages:
        <<: *php-container
        command: bin/console gaming:consume-messages all
    web-interface-publish-running-games-count-to-nchan:
        <<: *php-container
        command: bin/console web-interface:publish-running-games-count-to-nchan

volumes:
    mysql:
    proxysql.sock:
    redis:
    rabbitmq:
    prometheus:
