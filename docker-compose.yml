version: '3.4'

x-php-container-volumes:
    &php-container-volumes
        volumes:
            - ./:/project:delegated
            - vendor:/project/vendor
            - proxysql.sock:/var/run/proxysql
            - type: tmpfs
              target: /project/var

x-php-container:
    &php-container
    <<: *php-container-volumes
    build:
        context: .
        dockerfile: ./docker/Dockerfile
    env_file: ./.env
    depends_on:
        - mysql
        - proxysql
        - redis
        - rabbitmq
        - nchan
    restart: on-failure

services:
    ##############################
    #  Database and application  #
    ##############################
    traefik:
        image: traefik:2.10
        command:
            - --metrics.prometheus=true
            - --providers.docker
            - --providers.docker.exposedbydefault=false
        ports:
            - "80:80"
        depends_on:
            - nchan
            - php-fpm
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        labels:
            - "prometheus-job=traefik"
            - "prometheus-port=8080"
    grafana:
        image: ghcr.io/gaming-platform/docker-grafana:10.0
        ports:
            - "8083:3000"
    prometheus:
        image: ghcr.io/gaming-platform/docker-prometheus:2.45
        command: --config.file=/etc/prometheus/docker.yml
        volumes:
            - prometheus:/prometheus
            - /var/run/docker.sock:/var/run/docker.sock
        restart: on-failure
    node-exporter:
        image: prom/node-exporter:v1.6.0
        labels:
            - "prometheus-job=node"
            - "prometheus-port=9100"
    mysql:
        image: ghcr.io/gaming-platform/docker-mysql:8.2
        volumes:
            - mysql:/var/lib/mysql
        restart: on-failure
    mysql-exporter:
        image: prom/mysqld-exporter:v0.15.0
        command: --mysqld.username=root --mysqld.address mysql:3306
        environment:
            MYSQLD_EXPORTER_PASSWORD: password
        labels:
            - "prometheus-job=mysql"
            - "prometheus-port=9104"
    proxysql:
        image: ghcr.io/gaming-platform/docker-proxysql:2.5
        environment:
            PROXYSQL_CONFIG: |
                admin_variables: {
                    restapi_enabled="true"
                    hash_passwords="false"
                }
                mysql_variables: {
                    interfaces="/var/run/proxysql/proxysql.sock"
                    server_version="8.2"
                    monitor_username="root"
                    monitor_password="password"
                    auto_increment_delay_multiplex=0
                }
                mysql_servers: (
                    {hostgroup=1,address="mysql",port=3306,max_connections=100}
                )
                mysql_users: (
                    {username="root",password="password",default_hostgroup=1}
                )
        depends_on:
            - mysql
        volumes:
            - proxysql.sock:/var/run/proxysql
        labels:
            - "prometheus-job=proxysql"
            - "prometheus-port=6070"
        restart: on-failure
    redis:
        image: ghcr.io/gaming-platform/docker-redis:7.2
        volumes:
            - redis:/data
        restart: on-failure
    redis-exporter:
        image: oliver006/redis_exporter:v1.51.0
        command:
            - '-redis.addr=redis:6379'
        labels:
            - "prometheus-job=redis"
            - "prometheus-port=9121"
    rabbitmq:
        image: ghcr.io/gaming-platform/docker-rabbitmq:3.12
        hostname: rabbitmq
        volumes:
            - rabbitmq:/var/lib/rabbitmq/mnesia
        labels:
            - "prometheus-job=rabbitmq"
            - "prometheus-port=15692"
            - "prometheus-path=/metrics/per-object"
        restart: on-failure
    nchan:
        image: ghcr.io/gaming-platform/docker-nchan:1.3
        restart: on-failure
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.nchan.priority=20"
            - "traefik.http.routers.nchan.rule=PathPrefix(`/sse`)"
            - "traefik.http.routers.nchan.middlewares=nchan-stripprefix"
            - "traefik.http.middlewares.nchan-stripprefix.stripprefix.prefixes=/sse"
            - "prometheus-job=nchan"
            - "prometheus-port=81"
    php-fpm:
        <<: *php-container
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.php-fpm.priority=10"
            - "traefik.http.routers.php-fpm.rule=PathPrefix(`/`)"
            - "traefik.http.services.php-fpm.loadbalancer.server.port=80"

    ##############################
    #   Long running processes   #
    ##############################
    php-connect-four-follow-event-store:
        <<: *php-container
        command: bin/restartOnChange bin/console connect-four:follow-event-store pointer all
    php-chat-follow-event-store:
        <<: *php-container
        command: bin/restartOnChange bin/console chat:follow-event-store pointer all
    php-identity-follow-event-store:
        <<: *php-container
        command: bin/restartOnChange bin/console identity:follow-event-store pointer all
    php-consume-messages:
        <<: *php-container
        command: bin/restartOnChange bin/console gaming:consume-messages all
    php-web-interface-publish-running-games-count-to-nchan:
        <<: *php-container
        command: bin/restartOnChange bin/console web-interface:publish-running-games-count-to-nchan

    ##############################
    #     Development helper     #
    ##############################
    php:
        <<: *php-container-volumes
        build:
            context: .
            dockerfile: ./docker/Dockerfile
        entrypoint: ''
        command: 'true'
    phpmyadmin:
        image: phpmyadmin/phpmyadmin:5.2
        environment:
            PMA_HOST: mysql
            PMA_USER: root
            PMA_PASSWORD: password
        ports:
            - "8081:80"
        depends_on:
            - mysql
    phpredisadmin:
        image: erikdubbelboer/phpredisadmin:1
        environment:
            REDIS_1_HOST: redis
        ports:
            - "8082:80"
        depends_on:
            - redis

volumes:
    vendor:
    mysql:
    proxysql.sock:
    redis:
    rabbitmq:
    prometheus:
