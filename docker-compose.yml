version: '3.4'

x-php-container:
    &php-container
    build:
        context: .
        dockerfile: ./docker/php-fpm/Dockerfile
    environment:
        WAIT_FOR: mysql:3306,redis:6379,rabbit-mq:5672,nchan:81
        RUN_CHAT_MIGRATIONS: 1
        RUN_CONNECT_FOUR_MIGRATIONS: 1
        RUN_IDENTITY_MIGRATIONS: 1
    depends_on:
        - mysql
        - redis
        - rabbit-mq
        - nchan
    volumes:
        - ./config:/project/config:delegated
        - ./src:/project/src:delegated
        - vendor:/project/vendor
    restart: on-failure

services:
    ##############################
    #  Database and application  #
    ##############################
    traefik:
        build:
            context: .
            dockerfile: ./docker/traefik/Dockerfile
        command:
            - --metrics.prometheus=true
            - --providers.docker
            - --providers.docker.exposedbydefault=false
        ports:
            - "80:80"
        depends_on:
            - nchan
            - service-js-polyfill
            - php-fpm
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        labels:
            - "prometheus-job=traefik"
            - "prometheus-port=8080"
    grafana:
        build:
            context: .
            dockerfile: ./docker/grafana/Dockerfile
        environment:
            GF_AUTH_DISABLE_LOGIN_FORM: 1
            GF_AUTH_ANONYMOUS_ENABLED: 1
            GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
        ports:
            - "8084:3000"
        volumes:
            - ./docker/grafana/provisioning:/etc/grafana/provisioning
            - ./docker/grafana/dashboards:/var/lib/grafana/dashboards
    prometheus:
        build:
            context: .
            dockerfile: ./docker/prometheus/Dockerfile
        user: root # Needed for accessing docker.sock. In prod, it may be handled via file permissions.
        command:
            - '--config.file=/etc/prometheus/prometheus-docker.yml'
            - '--storage.tsdb.path=/prometheus'
        volumes:
            - prometheus:/prometheus
            - /var/run/docker.sock:/var/run/docker.sock
        restart: on-failure
    node-exporter:
        image: quay.io/prometheus/node-exporter
        labels:
            - "prometheus-job=node"
            - "prometheus-port=9100"
    mysql:
        build:
            context: .
            dockerfile: ./docker/mysql/Dockerfile
        environment:
            MYSQL_ROOT_PASSWORD: password
        volumes:
            - mysql:/var/lib/mysql
        restart: on-failure
    mysql-exporter:
        image: prom/mysqld-exporter
        environment:
            DATA_SOURCE_NAME: "root:password@(mysql:3306)/"
        labels:
            - "prometheus-job=mysql"
            - "prometheus-port=9104"
    redis:
        build:
            context: .
            dockerfile: ./docker/redis/Dockerfile
        command: redis-server --appendonly yes
        volumes:
            - redis:/data
        restart: on-failure
    rabbit-mq:
        build:
            context: .
            dockerfile: ./docker/rabbit-mq/Dockerfile
        hostname: rabbit-mq
        ports:
            - "8083:15672"
        volumes:
            - rabbit-mq:/var/lib/rabbitmq/mnesia
        restart: on-failure
    nchan:
        build:
            context: .
            dockerfile: ./docker/nchan/Dockerfile
        restart: on-failure
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.nchan.priority=20"
            - "traefik.http.routers.nchan.rule=PathPrefix(`/sse`)"
            - "prometheus-job=nchan"
            - "prometheus-port=81"
    service-js-polyfill:
        image: gamingplatform/service-js-polyfill
        restart: on-failure
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.service-js-polyfill.priority=20"
            - "traefik.http.routers.service-js-polyfill.rule=PathPrefix(`/polyfill`)"
            - "traefik.http.routers.service-js-polyfill.middlewares=service-js-polyfill-stripprefix"
            - "traefik.http.middlewares.service-js-polyfill-stripprefix.stripprefix.prefixes=/polyfill"
    php-fpm:
        <<: *php-container
        volumes:
            - ./config:/project/config:delegated
            - ./src:/project/src:delegated
            - ./tests:/project/tests:delegated
            - ./var:/project/var:delegated
            - ./web:/project/web:delegated
            - vendor:/project/vendor
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.php-fpm.priority=10"
            - "traefik.http.routers.php-fpm.rule=PathPrefix(`/`)"
            - "traefik.http.services.php-fpm.loadbalancer.server.port=80"

    ##############################
    #   Long running processes   #
    ##############################
    php-connect-four-follow-event-store:
        <<: *php-container
        command: bin/restartOnChange bin/console connect-four:follow-event-store pointer --select-all-subscribers -v
    php-chat-follow-event-store:
        <<: *php-container
        command: bin/restartOnChange bin/console chat:follow-event-store pointer --select-all-subscribers -v
    php-identity-follow-event-store:
        <<: *php-container
        command: bin/restartOnChange bin/console identity:follow-event-store pointer --select-all-subscribers -v
    php-consume-messages:
        <<: *php-container
        command: bin/restartOnChange bin/console gaming:consume-messages --select-all-consumers -v
    php-web-interface-publish-running-games-count-to-nchan:
        <<: *php-container
        command: bin/restartOnChange bin/console web-interface:publish-running-games-count-to-nchan

    ##############################
    #     Development helper     #
    ##############################
    php:
        build:
            context: .
            dockerfile: ./docker/php-fpm/Dockerfile
        command: 'true'
        volumes:
            - ./src:/project/src:delegated
            - ./tests:/project/tests:delegated
            - vendor:/project/vendor
    composer:
        build:
            context: .
            dockerfile: ./docker/php-fpm/Dockerfile
            target: builder
        command: 'true'
        volumes:
            - ./composer.json:/project/composer.json
            - ./composer.lock:/project/composer.lock
            - vendor:/project/vendor
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        environment:
            PMA_HOST: mysql
            PMA_USER: root
            PMA_PASSWORD: password
        ports:
            - "8081:80"
        depends_on:
            - mysql
    phpredisadmin:
        image: erikdubbelboer/phpredisadmin
        environment:
            REDIS_1_HOST: redis
        ports:
            - "8082:80"
        depends_on:
            - redis

volumes:
    vendor:
    mysql:
    redis:
    rabbit-mq:
    prometheus:
